<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置 -->

    <!--指定特定数据库的jdbc驱动jar包的位置 -->
    <classPathEntry location="C:\Users\Mrkin\Downloads\mysql-connector-java-5.1.30.jar"/>
<!--    <classPathEntry location="C:\Users\Mrkin\.m2\repository\mysql\mysql-connector-java\6.0.4\mysql-connector-java-6.0.4.jar"/>-->
    <context id="default" targetRuntime="MyBatis3">


        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true" />
        </commentGenerator>


        <!--jdbc的数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.0.11:3306/zh_framework?serverTimezone=UTC" userId="root" password="Password123">
        </jdbcConnection>



        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="com.zh.activiti.entity.sys" targetProject="src/main/java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>

            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>

            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
       <!-- <sqlMapGenerator targetPackage="com.zh.activiti.mapper.xml" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>-->


        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <!--<javaClientGenerator targetPackage="com.zh.activiti.mapper.xml" targetProject="src/main/java" type="MIXEDMAPPER">
            <property name="enableSubPackages" value=""/>
            &lt;!&ndash;
                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：
                    public;
                    private;
                    protected;
                    default
                    注意：如果 targetRuntime="MyBatis3",此参数被忽略
             &ndash;&gt;
            <property name="exampleMethodVisibility" value=""/>
            &lt;!&ndash;
                                           方法名计数器
              Important note: this property is ignored if the target runtime is MyBatis3.
             &ndash;&gt;
            <property name="methodNameCalculator" value=""/>

            &lt;!&ndash;
                                                为生成的接口添加父接口
             &ndash;&gt;
            <property name="rootInterface" value=""/>

        </javaClientGenerator>-->



        <table tableName="tb_user" domainObjectName="T_Sys_User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
    </context>
</generatorConfiguration>